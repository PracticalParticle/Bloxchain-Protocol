# Guardian Protocol
# Copy this file to .env and update the values for your deployment

# Test Mode Configuration
# Set to 'manual' to use provided contract addresses and private keys
# Set to 'auto' to automatically fetch from Ganache and Truffle artifacts
# AUTO MODE: Automatically discovers contract addresses from Truffle build artifacts
#           and uses Ganache's deterministic private keys for testing
# MANUAL MODE: Requires you to provide all contract addresses and private keys below
TEST_MODE=manual

# Network Configuration
GUARDIAN_NETWORK=development

# Development Network Configuration
# Leave REMOTE_HOST unset for local development (localhost)
# Set REMOTE_HOST to use remote development environment
REMOTE_HOST=your-remote-host.com
REMOTE_PORT=8545
REMOTE_PROTOCOL=https
REMOTE_NETWORK_ID=1337
REMOTE_GAS=8000000
REMOTE_GAS_PRICE=20000000000
REMOTE_FROM=

# Alternative: Use full RPC URL (overrides REMOTE_HOST/REMOTE_PORT/REMOTE_PROTOCOL)
# RPC_URL=https://your-remote-host.com:8545


# Contract Addresses (optional - can be provided at runtime)
GUARDIAN_ADDRESS=
GUARDIAN_WITH_ROLES_ADDRESS=
GUARDIAN_BARE_ADDRESS=
SIMPLE_VAULT_ADDRESS=
SIMPLE_RWA20_ADDRESS=

# Alternative RPC Configuration (if using custom network)
# CUSTOM_RPC_URL=https://your-custom-rpc-url:8545
# CUSTOM_NETWORK_ID=1337
# CUSTOM_NETWORK_NAME=custom_network

# Testing Wallet Private Keys (for MANUAL mode only)
# These are test wallets - DO NOT use in production
# Replace with your own test wallet private keys
# These wallets can be assigned different roles during testing for flexibility
# NOTE: These are only used when TEST_MODE=manual
#       When TEST_MODE=auto, Ganache's deterministic keys are used automatically
TEST_WALLET_1_PRIVATE_KEY=
TEST_WALLET_2_PRIVATE_KEY=
TEST_WALLET_3_PRIVATE_KEY=
TEST_WALLET_4_PRIVATE_KEY=
TEST_WALLET_5_PRIVATE_KEY=

# Deployment Configuration Flags
# Set to 'true' or 'false' to control which Guardian contracts to deploy
# Default: Guardian=false, GuardianWithRoles=false, GuardianBare=false
DEPLOY_GUARDIAN=false
DEPLOY_GUARDIAN_WITH_ROLES=false
DEPLOY_GUARDIAN_BARE=false

# Workflow Library Deployment Flags
# Set to 'true' or 'false' to control which workflow libraries to deploy
# Default: Both workflow libraries=false
DEPLOY_SECURE_OWNABLE_WORKFLOWS=false
DEPLOY_DYNAMIC_RBAC_WORKFLOWS=false

# Example Contract Deployment Flags
# Set to 'true' or 'false' to control which example contracts to deploy
# Default: Both example contracts=false
DEPLOY_SIMPLE_VAULT=false
DEPLOY_SIMPLE_RWA20=false

# Definition Library Addresses (per network)
# These are the addresses of the deployed definition libraries
STATE_ABSTRACTION_DEFINITIONS_ADDRESS=
SECURE_OWNABLE_DEFINITIONS_ADDRESS=
DYNAMIC_RBAC_DEFINITIONS_ADDRESS=

# =============================================================================
# DEPLOYMENT CONFIGURATION GUIDE
# =============================================================================
#
# DEPLOYMENT FLAGS:
#   DEPLOY_GUARDIAN=true/false          - Deploy standard Guardian contract
#   DEPLOY_GUARDIAN_WITH_ROLES=true/false - Deploy GuardianWithRoles contract  
#   DEPLOY_GUARDIAN_BARE=true/false     - Deploy minimal GuardianBare contract
#   DEPLOY_SECURE_OWNABLE_WORKFLOWS=true/false - Deploy SecureOwnableWorkflows library
#   DEPLOY_DYNAMIC_RBAC_WORKFLOWS=true/false - Deploy DynamicRBACWorkflows library
#   DEPLOY_SIMPLE_VAULT=true/false     - Deploy SimpleVault example contract
#   DEPLOY_SIMPLE_RWA20=true/false      - Deploy SimpleRWA20 example contract
#
# DEPLOYMENT SCENARIOS:
#   üèóÔ∏è  Full Development: All Guardian flags=true, Workflow flags=true, Example flags=false
#   üéØ  Minimal Testing: Only DEPLOY_GUARDIAN_BARE=true
#   üîß  Standard Testing: Only DEPLOY_GUARDIAN=true
#   üöÄ  Production Ready: Only DEPLOY_GUARDIAN_WITH_ROLES=true
#   üìã  Workflow Only: Only workflow flags=true (for workflow library testing)
#   üè¶  Examples Only: Only example flags=true (for example contract testing)
#
# WORKFLOW LIBRARIES:
#   üìã SecureOwnableWorkflows: Provides workflow definitions for ownership operations
#      ‚Ä¢ OWNERSHIP_TRANSFER workflows (4 paths)
#      ‚Ä¢ BROADCASTER_UPDATE workflows (4 paths)  
#      ‚Ä¢ RECOVERY_UPDATE workflows (1 path)
#      ‚Ä¢ TIMELOCK_UPDATE workflows (1 path)
#   üìã DynamicRBACWorkflows: Provides workflow definitions for RBAC operations
#      ‚Ä¢ ROLE_EDITING_TOGGLE workflows (1 path)
#
# EXAMPLE CONTRACTS:
#   üè¶ SimpleVault: Example vault contract with Guardian integration
#   üè¶ SimpleRWA20: Example RWA token contract with Guardian integration
#
# =============================================================================
# TEST MODE USAGE GUIDE
# =============================================================================
#
# AUTO MODE (TEST_MODE=auto):
#   ‚úÖ Best for: Local development with Ganache
#   ‚úÖ Automatically discovers contract addresses from Truffle artifacts
#   ‚úÖ Uses Ganache's deterministic private keys (no setup required)
#   ‚úÖ Requires: Ganache running on localhost:8545
#   ‚úÖ Requires: Contracts deployed via Truffle migrations
#   ‚ùå Not suitable for: Remote testing or custom private keys
#
# MANUAL MODE (TEST_MODE=manual):
#   ‚úÖ Best for: Remote testing, custom networks, or specific wallet requirements
#   ‚úÖ Full control over contract addresses and private keys
#   ‚úÖ Works with any Ethereum network (local or remote)
#   ‚úÖ Requires: Manual setup of all contract addresses and private keys
#   ‚ùå More setup required: Must update all addresses and keys manually
#
# QUICK START:
#   1. For local testing: Set TEST_MODE=auto, start Ganache, run migrations
#   2. For remote testing: Set TEST_MODE=manual, update all addresses/keys below
#   3. Run tests: node scripts/sanity/secure-ownable/run-tests.js
#
# WORKFLOW DEPLOYMENT EXAMPLES:
#   Deploy only workflow libraries: 
#     DEPLOY_SECURE_OWNABLE_WORKFLOWS=true DEPLOY_DYNAMIC_RBAC_WORKFLOWS=true 
#     DEPLOY_GUARDIAN=false DEPLOY_GUARDIAN_WITH_ROLES=false DEPLOY_GUARDIAN_BARE=false
#     DEPLOY_SIMPLE_VAULT=false DEPLOY_SIMPLE_RWA20=false truffle migrate
#
#   Deploy workflow libraries + examples:
#     DEPLOY_SECURE_OWNABLE_WORKFLOWS=true DEPLOY_DYNAMIC_RBAC_WORKFLOWS=true
#     DEPLOY_SIMPLE_VAULT=true DEPLOY_SIMPLE_RWA20=true truffle migrate
#
#   Deploy everything (full development):
#     All flags=true truffle migrate
#
# =============================================================================
